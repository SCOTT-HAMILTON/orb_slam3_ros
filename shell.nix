# Automatically generated by: ros2nix --distro noetic
{
  nix-ros-overlay ? builtins.fetchTarball "https://github.com/lopsided98/nix-ros-overlay/archive/master.tar.gz",
  pkgs ? import nix-ros-overlay { },
  rosDistro ? "noetic",
  extraPkgs ? { },
  extraPaths ? [ ],
  withPackages ? _: [ ],
  extraShellHook ? "",
}:
pkgs.mkShell {
  name = "ros2nix ${rosDistro} shell";
  packages = [
    (pkgs.rosPackages.${rosDistro}.buildEnv {
      wrapPrograms = false;
      paths =
        [
          pkgs.colcon
          pkgs.rosPackages.${rosDistro}.ros-core

          # Work around https://github.com/lopsided98/nix-ros-overlay/pull/624
          pkgs.rosPackages.${rosDistro}.ament-cmake-core
          pkgs.rosPackages.${rosDistro}.python-cmake-module
        ]
        ++ (
          with pkgs;
          with pkgs.rosPackages.${rosDistro};
          with extraPkgs;
          [
            # Dependencies from package.xml files
            catkin
            cv-bridge
            dynamic-reconfigure
            image-transport
            message-generation
            message-runtime
            nav-msgs
            roscpp
            rospy
            sensor-msgs
            std-msgs
            tf
            tf2-geometry-msgs
            tf2-ros
          ]
        )
        ++ builtins.attrValues extraPkgs
        ++ extraPaths
        ++ withPackages (pkgs // pkgs.rosPackages.${rosDistro});
      }
    )
  ];
  shellHook = ''
    # Setup ROS 2 shell completion. Doing it in direnv is useless.
    if [[ ! $DIRENV_IN_ENVRC ]]; then
        eval "$(${pkgs.python3Packages.argcomplete}/bin/register-python-argcomplete ros2)"
        eval "$(${pkgs.python3Packages.argcomplete}/bin/register-python-argcomplete colcon)"
    fi
  '' + extraShellHook;
}
